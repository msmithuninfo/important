1: create a folder in views>auth
inside auth> create a file login.blade.php
remove a Route: 
Route::get('/', function () {
    return view('welcome');
});

create a new controller AuthController

add a Route:
Route::get('/', [AuthController::class, 'login']);

AuthController>
public function login()
    {
        return view('auth.login');
    }

copy all welcome.blade.php file to login.blade.php 

form>
<form action="{{ url('login') }}" method="post">
@csrf or {{ csrf_field() }}


Route::post('login', [AuthController::class, 'AuthLogin']);

AuthLogin:
public function AuthLogin(Request $request)
    {
        dd($request->all());
    }

Finally::
public function login()
    {
        // dd(Hash::make(11111111));
        if(!empty(Auth::check()))
        {
            return redirect('admin/dashboard');
        }
        return view('auth.login');
    }


    public function AuthLogin(Request $request)
    {
        $remember = !empty($request->remember) ? true : false;
        if(Auth::attempt(['email' => $request->email, 'password' => $request->password], $remember))
        {
            return redirect('admin/dashboard');
        }
        else
        {
            return redirect()->back()->with('error', 'Please enter correct email and password');
        }
    }


now create logout route::::
Route::get('logout', [AuthController::class, 'logout']);
public function logout()
    {
        Auth::logout();
        return redirect(url(''));
    }



Now create for message show
views>>>_message.blade.php
@if (!empty(session('success')))
    <div class="alert alert-success" role="alert">
        {{ session('success') }}
    </div>
@endif

@if (!empty(session('error')))
    <div class="alert alert-danger" role="alert">
        {{ session('error') }}
    </div>
@endif

@if (!empty(session('warning')))
    <div class="alert alert-warning" role="alert">
        {{ session('warning') }}
    </div>
@endif

login.blade.php>>>
@include('_message')

Role based login::::::
now create 4 user in database users for admin, teacher, student, parent
add a column>
Name: user_type, Type: TINYINT, Default: as defined 3, Comments: 1: admin, 2: teacher, 3: student, 4: parent
change user type for database user_type>>> admin:1, teacher:2, student:3, parent:4


Now create four middleware
AdminMiddleware, TeacherMiddleware, StudentMiddleware, ParentMiddleware
php artisan make:middleware AdminMiddleware
php artisan make:middleware TeacherMiddleware
php artisan make:middleware StudentMiddleware
php artisan make:middleware ParentMiddleware



AdminMiddleware>>>>>>>>>
use Illuminate\Support\Facades\Auth;
public function handle(Request $request, Closure $next): Response
    {
        if(!empty(Auth::check()))
        {
            if(Auth::user()->user_type == 1){
                return $next($request);
            }
            else
            {
                Auth::logout();
                return redirect(url(''));
            }
        }
        else
        {
            Auth::logout();
            return redirect(url(''));
        }
    }

Another middleware only change user_type 2 or 3 or 4

Now go to kernel.php

protected $middlewareAliases = [
        'admin' => \App\Http\Middleware\AdminMiddleware::class,
        'teacher' => \App\Http\Middleware\TeacherMiddleware::class,
        'student' => \App\Http\Middleware\StudentMiddleware::class,
        'parent' => \App\Http\Middleware\ParentMiddleware::class,
    ];


Now change Route with auth and middleware::::::
Route::group(['middleware' => 'admin'], function () {

});
Route::group(['middleware' => 'teacher'], function () {

});
Route::group(['middleware' => 'student'], function () {

});
Route::group(['middleware' => 'parent'], function () {

});


Now go to Controllers>AuthController>>>
if(Auth::user()->user_type == 1)
            {
                return redirect('admin/dashboard');
            }
            else if(Auth::user()->user_type == 2)
            {
                return redirect('teacher/dashboard');
            }
            else if(Auth::user()->user_type == 3)
            {
                return redirect('student/dashboard');
            }
            else if(Auth::user()->user_type == 4)
            {
                return redirect('parent/dashboard');
            }




Dashboard wise login use DashboardController
php artisan make:controller DashboardController

Dynamic Name:: {{ Auth::user()->name }}

Role Wise showing data>header.blade.php













